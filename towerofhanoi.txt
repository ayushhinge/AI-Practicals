def tower_of_hanoi_recursive(n, source, auxiliary, destination, moves=[]):
    if n == 1:
        moves.append(f"Move disk 1 from {source} → {destination}")
        return moves

    # Move n-1 disks from source to auxiliary using destination as a buffer
    tower_of_hanoi_recursive(n - 1, source, destination, auxiliary, moves)

    # Move the nth (largest) disk from source to destination
    moves.append(f"Move disk {n} from {source} → {destination}")

    # Move n-1 disks from auxiliary to destination using source as a buffer
    tower_of_hanoi_recursive(n - 1, auxiliary, source, destination, moves)

    return moves

# Example usage
num_disks = 4  # Change this value for different disk numbers
moves = tower_of_hanoi_recursive(num_disks, 'A', 'B', 'C')

print("\n".join(moves))
print(f"\nTotal Moves: {len(moves)}")
