import math

def print_board(board):
    for row in board:
        print(" ".join(row))
    print()

def check_winner(board):
    for row in board:
        if row[0] == row[1] == row[2] and row[0] != ' ':
            return row[0]
    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] and board[0][col] != ' ':
            return board[0][col]
    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != ' ':
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != ' ':
        return board[0][2]
    return None

def is_moves_left(board):
    for row in board:
        if ' ' in row:
            return True
    return False

def minimax(board, depth, is_maximizing):
    winner = check_winner(board)
    if winner == 'X':
        return -10 + depth
    if winner == 'O':
        return 10 - depth
    if not is_moves_left(board):
        return 0

    if is_maximizing:
        best = -math.inf
        for i in range(3):
            for j in range(3):
                if board[i][j] == ' ':
                    board[i][j] = 'O'
                    best = max(best, minimax(board, depth + 1, False))
                    board[i][j] = ' '
        return best
    else:
        best = math.inf
        for i in range(3):
            for j in range(3):
                if board[i][j] == ' ':
                    board[i][j] = 'X'
                    best = min(best, minimax(board, depth + 1, True))
                    board[i][j] = ' '
        return best

def best_move(board):
    best_val = -math.inf
    move = (-1, -1)
    for i in range(3):
        for j in range(3):
            if board[i][j] == ' ':
                board[i][j] = 'O'
                move_val = minimax(board, 0, False)
                board[i][j] = ' '
                if move_val > best_val:
                    best_val = move_val
                    move = (i, j)
    return move

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    print_board(board)

    while True:
        try:
            user_row, user_col = map(int, input("Enter row and column (0-2): ").split())
        except ValueError:
            print("Please enter two numbers separated by a space.")
            continue

        if not (0 <= user_row <= 2 and 0 <= user_col <= 2):
            print("Invalid input, indices must be between 0 and 2.")
            continue

        if board[user_row][user_col] != ' ':
            print("Invalid move, cell already taken. Try again.")
            continue

        board[user_row][user_col] = 'X'
        print_board(board)

        if check_winner(board):
            print("You win!")
            break
        if not is_moves_left(board):
            print("It's a tie!")
            break

        ai_row, ai_col = best_move(board)
        board[ai_row][ai_col] = 'O'
        print("AI plays:")
        print_board(board)

        if check_winner(board):
            print("AI wins!")
            break
        if not is_moves_left(board):
            print("It's a tie!")
            break

if __name__ == "__main__":
    play_game()
